/**
 * OmniZap - Sistema de Automa√ß√£o WhatsApp
 *
 * Sistema profissional para automa√ß√£o e gerenciamento de mensagens WhatsApp
 * Desenvolvido com tecnologia Baileys para m√°xima compatibilidade
 *
 * @version 1.0.5
 * @author OmniZap Team
 * @license MIT
 */

const OmniZapMessageProcessor = require('./app/controllers/messageController');
const logger = require('./app/utils/logger/loggerModule');
const db = require('./app/database/mysql');

/**
 * Processador principal de mensagens do OmniZap
 *
 * @param {Object} messageUpdate - Atualiza√ß√£o de mensagens recebidas
 * @param {Object} whatsappClient - Cliente WhatsApp ativo
 * @param {String} qrCodePath - Caminho do QR Code para autentica√ß√£o
 * @returns {Promise<void>}
 */
const OmniZapMainHandler = async (messageUpdate, whatsappClient, qrCodePath) => {
  try {
    await OmniZapMessageProcessor(messageUpdate, whatsappClient, qrCodePath);
  } catch (error) {
    logger.error('‚ùå OmniZap: Erro no processamento principal:', {
      error: error.message,
      stack: error.stack,
    });

    throw error;
  }
};

if (require.main === module) {
  logger.info('üîå Iniciando OmniZap...');

  db.init()
    .then((initialized) => {
      if (initialized) {
        logger.info('üíæ Banco de dados MySQL inicializado com sucesso');
      } else {
        logger.warn('‚ö†Ô∏è Banco de dados MySQL n√£o inicializado. Apenas armazenamento em mem√≥ria dispon√≠vel.');
      }

      // Inicia o controlador de socket do WhatsApp
      require('./app/connection/socketController');
    })
    .catch((error) => {
      logger.error('‚ùå Erro ao inicializar banco de dados:', {
        error: error.message,
        stack: error.stack,
      });

      logger.info('üîÑ Iniciando sem banco de dados...');
      // Mesmo com erro, continua a inicializa√ß√£o do controlador de socket
      require('./app/connection/socketController');
    });
}

module.exports = OmniZapMainHandler;
