/**
 * OmniZap Menu Command
 *
 * Comando para exibir o menu de comandos dispon√≠veis no sistema OmniZap
 *
 * @version 1.0.0
 * @author OmniZap Team
 * @license MIT
 */

const logger = require('../../app/utils/logger/loggerModule');
const { formatSuccessMessage } = require('../../app/utils/messageUtils');
const { COMMAND_PREFIX, EMOJIS } = require('../../app/utils/constants');
const { STICKERS_PER_PACK } = require('../commandModules/stickerModules/stickerPackManager');

/**
 * Processa o comando de menu, exibindo todos os comandos dispon√≠veis
 *
 * @param {Object} omniZapClient - Cliente WhatsApp
 * @param {Object} messageInfo - Informa√ß√µes da mensagem
 * @param {String} senderJid - JID do remetente
 * @param {String} groupJid - JID do grupo (pode ser null)
 * @param {String} args - Argumentos do comando
 * @returns {Promise<Object>} - Resultado da opera√ß√£o
 */
const processMenuCommand = async (omniZapClient, messageInfo, senderJid, groupJid, args) => {
  logger.info('Processando comando menu', { senderJid, groupJid, args });

  try {
    // Verifica argumentos para exibir menus espec√≠ficos
    const arg = args ? args.trim().toLowerCase() : '';

    switch (arg) {
      case 'admin':
        return {
          success: true,
          message: buildAdminMenu(),
        };
      case 'sticker':
        return {
          success: true,
          message: buildStickerMenu(),
        };
      default:
        return {
          success: true,
          message: buildMainMenu(),
        };
    }
  } catch (error) {
    logger.error('Erro ao processar comando menu', {
      error: error.message,
      stack: error.stack,
      senderJid,
      groupJid,
      args,
    });

    return {
      success: false,
      message: `${EMOJIS.ERROR} *Erro ao exibir menu*\n\nOcorreu um erro ao processar o comando. Por favor, tente novamente mais tarde.`,
    };
  }
};

/**
 * Constr√≥i o menu principal com todos os comandos dispon√≠veis
 *
 * @returns {String} - Mensagem formatada com o menu principal
 */
const buildMainMenu = () => {
  const prefix = COMMAND_PREFIX;

  return formatSuccessMessage(
    'üìã Menu de Comandos OmniZap',
    'Abaixo est√£o todos os comandos dispon√≠veis no sistema:',
    `*üõ°Ô∏è Comandos de Administra√ß√£o:*
‚Ä¢ \`${prefix}ban\` - Bane usu√°rio do grupo
‚Ä¢ \`${prefix}banlist\` - Lista usu√°rios banidos
‚Ä¢ \`${prefix}add\` - Adiciona usu√°rio ao grupo
‚Ä¢ \`${prefix}promote\` - Promove usu√°rio a admin
‚Ä¢ \`${prefix}demote\` - Remove admin de um usu√°rio
‚Ä¢ \`${prefix}setname\` - Altera nome do grupo
‚Ä¢ \`${prefix}setdesc\` - Altera descri√ß√£o do grupo
‚Ä¢ \`${prefix}group\` - Configura√ß√µes do grupo
‚Ä¢ \`${prefix}ephemeral\` - Mensagens tempor√°rias
‚Ä¢ \`${prefix}addmode\` - Configura modo de entrada
‚Ä¢ \`${prefix}link\` - Obt√©m link do grupo
‚Ä¢ \`${prefix}groupinfo\` - Informa√ß√µes do grupo

*üé≠ Comandos de Stickers:*
‚Ä¢ \`${prefix}sticker\` ou \`${prefix}s\` - Cria sticker de imagem/v√≠deo
‚Ä¢ \`${prefix}s <nome> | <autor>\` - Personaliza nome e autor do sticker
‚Ä¢ \`${prefix}s packs\` - Lista seus pacotes de stickers
‚Ä¢ \`${prefix}s info <n√∫mero>\` - Ver detalhes de um pack
‚Ä¢ \`${prefix}s send <n√∫mero>\` - Envia pack completo
‚Ä¢ \`${prefix}s help\` - Instru√ß√µes detalhadas

*üîß Outros Comandos:*
‚Ä¢ \`${prefix}menu admin\` - Menu de comandos admin
‚Ä¢ \`${prefix}menu sticker\` - Menu de comandos de stickers

_Desenvolvido por OmniZap Team_`,
  );
};

/**
 * Constr√≥i o menu de comandos de administra√ß√£o
 *
 * @returns {String} - Mensagem formatada com o menu de administra√ß√£o
 */
const buildAdminMenu = () => {
  const prefix = COMMAND_PREFIX;

  return formatSuccessMessage(
    'üõ°Ô∏è Menu de Comandos de Administra√ß√£o',
    'Comandos para gerenciamento de grupos:',
    `*Gerenciamento de Usu√°rios:*
‚Ä¢ \`${prefix}ban <n√∫mero/@men√ß√£o> [motivo]\` - Bane usu√°rio do grupo
‚Ä¢ \`${prefix}banlist\` - Lista usu√°rios banidos
‚Ä¢ \`${prefix}banlist grupo\` - Lista banidos do grupo atual
‚Ä¢ \`${prefix}banlist user <n√∫mero>\` - Hist√≥rico de bans de um usu√°rio
‚Ä¢ \`${prefix}banlist total\` - Estat√≠sticas de banimentos
‚Ä¢ \`${prefix}add <n√∫mero1> [n√∫mero2...]\` - Adiciona usu√°rios ao grupo
‚Ä¢ \`${prefix}promote <@men√ß√£o>\` - Promove usu√°rio a administrador
‚Ä¢ \`${prefix}demote <@men√ß√£o>\` - Remove privil√©gios de administrador

*Configura√ß√µes de Grupo:*
‚Ä¢ \`${prefix}setname <nome>\` - Altera o nome do grupo
‚Ä¢ \`${prefix}setdesc <descri√ß√£o>\` - Altera a descri√ß√£o do grupo
‚Ä¢ \`${prefix}group open/close\` - Abre/fecha o grupo
‚Ä¢ \`${prefix}ephemeral <off/24h/7d/90d>\` - Configura mensagens tempor√°rias
‚Ä¢ \`${prefix}addmode <on/off>\` - Ativa/desativa aprova√ß√£o de entrada
‚Ä¢ \`${prefix}link\` - Obt√©m o link de convite do grupo
‚Ä¢ \`${prefix}groupinfo\` - Exibe informa√ß√µes do grupo

*Observa√ß√µes:*
‚Ä¢ Comandos s√≥ funcionam para administradores do grupo
‚Ä¢ O bot precisa ser administrador para executar a maioria dos comandos

_Use \`${prefix}menu\` para ver todos os comandos dispon√≠veis_`,
  );
};

/**
 * Constr√≥i o menu de comandos de stickers
 *
 * @returns {String} - Mensagem formatada com o menu de stickers
 */
const buildStickerMenu = () => {
  const prefix = COMMAND_PREFIX;

  return formatSuccessMessage(
    'üé≠ Menu Completo de Comandos de Stickers',
    'Guia detalhado para cria√ß√£o e gerenciamento de stickers personalizados:',
    `*üì∏ Cria√ß√£o de Stickers:*
‚Ä¢ \`${prefix}sticker\` ou \`${prefix}s\` - Cria sticker da imagem/v√≠deo enviado ou respondido
‚Ä¢ \`${prefix}s <nome> | <autor>\` - Cria sticker com nome de pacote e autor personalizados
  _Exemplo: \`${prefix}s Meus Stickers | Jo√£o Silva\`_
‚Ä¢ Para criar um sticker, envie uma imagem/v√≠deo e digite \`${prefix}s\` na legenda ou responda com \`${prefix}s\`
‚Ä¢ Para criar v√°rios stickers em sequ√™ncia, envie m√≠dias e use \`${prefix}s\` para cada uma

*üì¶ Gerenciamento de Pacotes:*
‚Ä¢ \`${prefix}s packs\` ou \`${prefix}s list\` - Lista todos os seus pacotes de stickers
‚Ä¢ \`${prefix}s info <n√∫mero>\` - Mostra detalhes completos do pacote espec√≠fico
  _Exemplo: \`${prefix}s info 1\` mostra detalhes do seu primeiro pack_
‚Ä¢ \`${prefix}s rename <n√∫mero> <nome> | <autor>\` - Renomeia um pacote e seu autor
  _Exemplo: \`${prefix}s rename 2 Animais | Cole√ß√£o 2025\`_
‚Ä¢ \`${prefix}s delete <n√∫mero>\` - Exclui permanentemente um pacote de stickers
  _Exemplo: \`${prefix}s delete 3\` exclui seu terceiro pack_
‚Ä¢ \`${prefix}s stats\` ou \`${prefix}s status\` - Exibe estat√≠sticas detalhadas dos seus stickers
‚Ä¢ \`${prefix}s prefs <nome> | <autor>\` - Define prefer√™ncias padr√£o para novos stickers
  _Exemplo: \`${prefix}s prefs Meus Stickers | Jo√£o\` define modelo para novos packs_

*üîÑ Compartilhamento de Stickers:*
‚Ä¢ \`${prefix}s send <n√∫mero>\` ou \`${prefix}s share <n√∫mero>\` - Envia todos os stickers do pacote
  _Exemplo: \`${prefix}s send 1\` envia todos os stickers do primeiro pack_
‚Ä¢ Stickers s√£o enviados um a um, em sequ√™ncia, preservando a qualidade original
‚Ä¢ Voc√™ pode enviar packs completos ou incompletos para qualquer conversa

*‚ÑπÔ∏è Informa√ß√µes Importantes:*
‚Ä¢ Cada pacote comporta at√© ${STICKERS_PER_PACK} stickers
‚Ä¢ Os pacotes s√£o criados e organizados automaticamente
‚Ä¢ Quando um pack atinge ${STICKERS_PER_PACK} stickers, um novo √© criado automaticamente
‚Ä¢ Formatos suportados: JPG, PNG, WEBP para imagens e MP4, GIF para animados
‚Ä¢ Para melhor qualidade, envie imagens com resolu√ß√£o adequada
‚Ä¢ Stickers de v√≠deo ser√£o limitados a alguns segundos
‚Ä¢ Suas prefer√™ncias de nome/autor s√£o salvas automaticamente

*üîç Recursos Avan√ßados:*
‚Ä¢ Ao criar stickers, voc√™ pode personalizar texto com vari√°veis especiais:
  ‚Üí \`#nome\` ser√° substitu√≠do pelo seu nome no WhatsApp
  ‚Üí \`#id\` ser√° substitu√≠do pelo seu n√∫mero
  ‚Üí \`#data\` ser√° substitu√≠do pela data atual
‚Ä¢ Os pacotes s√£o salvos individualmente e podem ser recuperados mesmo ap√≥s reiniciar o bot
‚Ä¢ Use \`${prefix}s prefs\` sem argumentos para ver suas configura√ß√µes atuais

_Para instru√ß√µes passo a passo, envie \`${prefix}s help\`_`,
  );
};

module.exports = {
  processMenuCommand,
};
